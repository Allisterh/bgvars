# Generated by roxygen2: do not edit by hand

S3method(add_priors,gvarsubmodels)
S3method(add_priors,gvecsubmodels)
S3method(draw_posterior,gvarsubmodels)
S3method(draw_posterior,gvecsubmodels)
S3method(irf,bgvarest)
S3method(irf,ctryvarest)
S3method(plot,bgvarest)
S3method(plot,bgvarestirf)
S3method(plot,bgvarfevd)
S3method(plot,bgvarirf)
S3method(plot,bgvarprd)
S3method(plot,bgvecest)
S3method(plot,ctryvarest)
S3method(plot,ctryvartest)
S3method(plot,ctryvecest)
S3method(predict,bgvar)
S3method(print,summary.bgvarest)
S3method(print,summary.bgvecest)
S3method(print,summary.ctryvarest)
S3method(print,summary.ctryvecest)
S3method(summary,bgvarest)
S3method(summary,bgvecest)
S3method(summary,ctryvarest)
S3method(summary,ctryvecest)
S3method(thin,bgvar)
S3method(thin,bgvarest)
S3method(thin,bgvecest)
export(bvarxpost)
export(bvecxpost)
export(combine_submodels)
export(create_models)
export(create_regions)
export(create_specifications)
export(create_weights)
export(ctryvec_to_ctryvar)
export(diff_variables)
export(get_submodel_specifications)
export(gfevd)
export(girf)
export(select_submodels)
export(submodel_test_statistics)
exportPattern("^[[:alpha:]]+")
importFrom(Rcpp,sourceCpp)
importFrom(bvartools,add_priors)
importFrom(bvartools,draw_posterior)
importFrom(bvartools,irf)
importFrom(coda,thin)
useDynLib(bgvars, .registration = TRUE)
