// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// combine_p_sigma
Rcpp::List combine_p_sigma(arma::mat& p, arma::mat& sigma);
RcppExport SEXP _bgvars_combine_p_sigma(SEXP pSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(combine_p_sigma(p, sigma));
    return rcpp_result_gen;
END_RCPP
}
// ir
arma::mat ir(Rcpp::List A, int h, int impulse, int response, bool full);
RcppExport SEXP _bgvars_ir(SEXP ASEXP, SEXP hSEXP, SEXP impulseSEXP, SEXP responseSEXP, SEXP fullSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type impulse(impulseSEXP);
    Rcpp::traits::input_parameter< int >::type response(responseSEXP);
    Rcpp::traits::input_parameter< bool >::type full(fullSEXP);
    rcpp_result_gen = Rcpp::wrap(ir(A, h, impulse, response, full));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bgvars_combine_p_sigma", (DL_FUNC) &_bgvars_combine_p_sigma, 2},
    {"_bgvars_ir", (DL_FUNC) &_bgvars_ir, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_bgvars(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
